[project]
name = "ctf-architect"
version = "0.1.0a12"
description = "A CTF challenge management tool"
license = "MIT"
readme = "README.md"
authors = [
    { name = "Jus-Codin", email = "70018166+Jus-Codin@users.noreply.github.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "cyclopts>=3.1.2",
    "pydantic>=2.10.4",
    "pyyaml>=6.0.2",
    "readchar>=4.2.1",
    "rich>=13.9.4",
    "tomlkit>=0.13.2",
]

[project.scripts]
ctf-architect = "ctf_architect.cli:main"
ctfa = "ctf_architect.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "ruff>=0.8.4",
]
docs = [
    "mkdocs-material>=9.5.50",
    "mkdocstrings[python]>=0.27.0",
]

[tool.ruff]
line-length = 120
target-version = "py311"
include = [
    "src/**/*.py",
]

[tool.ruff.lint]
extend-select = ["RUF100", "C90", "UP", "I", "D"]
mccabe = { max-complexity = 15 }
ignore = [
    "D100", # ignore missing docstring in module
    "D101", # ignore missing docstring in class
    "D102", # ignore missing docstring in public method
    "D103", # ignore missing docstring in public function
    "D104", # ignore missing docstring in public package
    "D105", # ignore missing docstring in magic methods
    "D107", # ignore missing docstring in __init__ methods
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"