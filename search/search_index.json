{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CTF-Architect","text":"<p>Github: https://github.com/Jus-Codin/CTF-Architect</p> <p>Documentation: https://jus-codin.github.io/CTF-Architect/</p> <p>CTF Architect is a tool for managing challenges for CTFs.</p> <p>Warning</p> <p>This tool is still a work in progress, bugs are to be expected. If you find any, please open an issue</p>"},{"location":"#installation","title":"Installation","text":"<p>Refer to the installation guide for instructions on how to install CTF-Architect.</p>"},{"location":"#usage","title":"Usage","text":"<ul> <li>For Challenge Creators</li> <li>For CTF Organizers</li> </ul>"},{"location":"api/models/","title":"Work in Progress","text":""},{"location":"guides/installation/","title":"Installation","text":""},{"location":"guides/installation/#installing-from-pypi","title":"Installing from PyPI","text":"<p>To install from PyPI, run the following command:</p> <pre><code># Linux and MacOS\npython3 -m pip install ctf-architect\n\n# Windows\npy -3 -m pip install ctf-architect\n</code></pre> <p>Warning</p> <p>If the above command produces an error during installation, try running the command in a terminal with administrator privileges.</p>"},{"location":"guides/installation/#installing-from-source","title":"Installing from Source","text":"<p>Warning</p> <p>Installing from source will pull the latest changes from the repository. This may include new features, bug fixes, or breaking changes. If you want to use a stable version, it is recommended to install from PyPI.</p> <p>Git clone the repository, and pip install it</p> <pre><code>git clone https://github.com/Jus-Codin/CTF-Architect\ncd CTF-Architect\n\n# Linux and MacOS\npython3 -m pip install .\n\n# Windows\npy -3 -m pip install .\n</code></pre>"},{"location":"guides/installation/#post-installation","title":"Post Installation","text":"<p>If the installation is successful, you should be able to run the following commands:</p> <pre><code>ctf-architect --help\n\nchall-architect --help\n</code></pre> <p>Note</p> <p>If after installation, you get an error saying that the command is not found, you may need to add the python scripts folder to your PATH environment variable. See this guide for more information.</p> <p>Now that you have successfully installed CTF-Architect, read these guides to get started:</p> <ul> <li>Packaging a challenge for submission</li> <li>Setting up a challenge repository</li> </ul>"},{"location":"guides/packaging-challenges/","title":"Packaging Challenges","text":"<p>Note</p> <p>This guide assumes that you have successfully installed CTF-Architect. If you have not, please refer to the installation guide.</p>"},{"location":"guides/packaging-challenges/#download-ctf_configtoml","title":"Download ctf_config.toml","text":"<p>Download the relavant <code>ctf_config.toml</code> file for the CTF. If you do not have this file, contact the CTF organizers for it.</p>"},{"location":"guides/packaging-challenges/#prepare-your-files","title":"Prepare Your Files","text":"<p>Prepare the following files for your challenge:</p> <ul> <li>Solution Files: The writeup or solution files for the challenge.</li> <li>Challenge Files: The files that the participants will interact with to solve the challenge.</li> <li>Service Folders: If your challenge requires a service, create a folder for the service. This folder should contain the files required to run the service and a <code>Dockerfile</code>.</li> </ul>"},{"location":"guides/packaging-challenges/#packaging-a-challenge","title":"Packaging a Challenge","text":"<p>To package a challenge for submission, run the following command:</p> <pre><code>chall-architect\n\n# or\n\npython3 -m ctf_architect.chall_architect # Linux and MacOS\npy -3 -m ctf_architect.chall_architect # Windows\n</code></pre> <p> </p>"},{"location":"guides/packaging-challenges/#submitting-a-challenge","title":"Submitting a Challenge","text":"<p>If everything goes well, your challenge should be nicely packaged in a folder. You can now zip the folder and submit it. </p> <p>Warning</p> <p>Ensure that it is a .zip file, and not a .rar or .7z file.</p>"},{"location":"spec/challenge/","title":"Challenge Specification v0.1","text":"<p>This page describes the structure of a challenge in CTF-Architect.</p>"},{"location":"spec/challenge/#challenge-structure","title":"Challenge Structure","text":"<p>A challenge in CTF-Architect is a directory that contains the following files and directories:</p> <pre><code>.\n\u2514\u2500\u2500 \ud83d\udcc1 {challenge_name}/\n    \u251c\u2500\u2500 \ud83d\udcc1 dist/\n    \u2502   \u2514\u2500\u2500 \ud83d\udcc4...\n    \u251c\u2500\u2500 \ud83d\udcc1 service/\n    \u2502   \u251c\u2500\u2500 \ud83d\udcc1 {service_name}/\n    \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc4...\n    \u2502   \u2502   \u2514\u2500\u2500 \ud83d\udc0b Dockerfile\n    \u2502   \u2514\u2500\u2500 \ud83d\udc0b docker-compose.yml\n    \u251c\u2500\u2500 \ud83d\udcc4 chall.toml\n    \u2514\u2500\u2500 \ud83d\udcc4 README.md\n</code></pre> File/Directory Description <code>dist/</code> Directory containing the challenge files to give to users attempting the challenge. <code>service/</code> Directory containing the services for challenges that require hosting. <code>service/{service_name}/</code> Directory containing the files for the service. This folder must container a <code>Dockerfile</code> <code>service/docker-compose.yml</code> Docker Compose file to run the services. If only one service is needed, this does not need to be added. <code>chall.toml</code> TOML file containing the metadata for the challenge. This is generated automatically by <code>chall-architect</code> <code>README.md</code> Markdown file containing the description of the challenge. This is generated automatically by <code>chall-architect</code>"},{"location":"spec/challenge/#challtoml-specification","title":"<code>chall.toml</code> Specification","text":"<p>The <code>chall.toml</code> file contains the metadata for the challenge. The file is in the following format:</p> <pre><code># Challenge info file (version 0.1)\n# This file is machine generated. DO NOT EDIT unless you know what you are doing.\n# If you want to create or edit a challenge, use chall-architect instead.\n\nversion = \"0.1\"\n\n[challenge]\nauthor = \"Author Name\"\ncategory = \"category\"\ndescription = \"Description\"\ndifficulty = \"difficulty\"\nname = \"Challenge Name\"\n\nfiles = [\n    \"file1\",\n    \"file2\"\n]\n\nrequirements = [\n    \"challenge1\",\n    \"challenge2\"\n]\n\n[challenge.extras]\ndiscord = \"juscodin\"\n\n\n# Static case-sensitive flag\n[[challenge.flags]]\nflag = \"flag{example}\"\n\n# Static case-insensitive flag\n[[challenge.flags]]\nflag = \"flag{example2}\"\ncase_insensitive = true\n\n# Regex case-sensitive flag\n[[challenge.flags]]\nflag = \"flag{example3}\"\nregex = true\n\n# Regex case-insensitive flag\n[[challenge.flags]]\nflag = \"flag{example4}\"\nregex = true\ncase_insensitive = true\n\n\n# Example hint\n[[challenge.hints]]\ncost = 10\ncontent = \"This is a hint\"\n\n# Example hint with requirements\n[[challenge.hints]]\ncost = 20\ncontent = \"This is a hint with requirements\"\nrequirements = 0\n\n\n# Example service\n[[challenge.services]]\nname = \"service1\"\npath = \"service1\"\nport = 1337\ntype = \"web\"\n</code></pre>"},{"location":"spec/challenge/#fields","title":"Fields","text":"<ul> <li><code>author</code> (String): Author of the challenge</li> <li><code>category</code> (String): Category of the challenge</li> <li><code>description</code> (String): Description of the challenge</li> <li><code>difficulty</code> (String): Difficulty of the challenge</li> <li><code>name</code> (String): Name of the challenge</li> <li><code>files</code> (List of Strings) (Optional): List of files to give users attempting the challenge. The files are specified as a list of strings, where each string is a path to a file. The paths are relative to the challenge's directory. You can also specify a URL for users to download the file from. If you have no files to give, you do not need to specify this.</li> <li><code>requirements</code> (List of Strings) (Optional): List of challenge names for challenges that must be completed before this challenge can be attempted. If there are no requirements, you do not need to specify this.</li> <li><code>extras</code> (Table) (Optional): Extra information about the challenge. Extra fields specified in the CTF repository config must be specified here.</li> <li><code>flags</code> (List of Tables): List of flags for the challenge. Flags can be static or regex. The flag must have the following fields:<ul> <li><code>flag</code> (String): The flag for the challenge</li> <li><code>regex</code> (Boolean) (Optional): Whether the flag is a regex. Default is <code>false</code>.</li> <li><code>case_insensitive</code> (Boolean) (Optional): Whether the flag is case-insensitive. Default is <code>false</code>.</li> </ul> </li> <li><code>hints</code> (List of Tables) (Optional): List of hints for the challenge. Hints can have a cost and requirements. The hint must have the following fields:<ul> <li><code>cost</code> (Integer): The cost of the hint</li> <li><code>content</code> (String): The content of the hint</li> <li><code>requirements</code> (Integer) (Optional): The index of the hint that must be purchased before this hint can be purchased.</li> </ul> </li> <li><code>services</code> (List of Tables) (Optional): List of services for the challenge. The service must have the following fields:<ul> <li><code>name</code> (String): Name of the service</li> <li><code>path</code> (String): Path to the service directory, relative to the root of the challenge folder</li> <li><code>port</code> (Integer): Port the docker container exposes</li> <li><code>type</code> (String): The type of service. This must be one of the following:<ul> <li><code>web</code>     : A web service, must have a port exposed</li> <li><code>nc</code>      : A netcat service, must have a port exposed</li> <li><code>ssh</code>     : An ssh service, must have a port exposed</li> <li><code>secret</code>  : A secret service, it must have a port exposed, but will not be shown in the challenge info. This is useful for challenges where the service must be discovered by the player</li> <li><code>internal</code>: An internal service, does not need to expose a port, and will not be shown in the challenge info. This is useful for challenges where the service should not be accessed directly, i.e. web admin bots</li> </ul> </li> </ul> </li> </ul>"}]}